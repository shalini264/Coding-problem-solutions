class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int n = heights.size();
        int left[n],right[n];
        stack<int>st;
        for(int i=0;i<n;i++)
        {
           if(st.empty())
             {st.push(i);
              cout<<"left"<<i<<" is "<<0<<"\n";
              left[i] = 0;}
           else
             { while(heights[st.top()]>=heights[i])
                 {  if(st.top()==0)
                     break;
                     st.pop();}
             if(heights[st.top()]<heights[i])
             left[i] = st.top()+1;
             else
             left[i] = 0;
             st.push(i);}
        }
        while(!st.empty())
        {
            st.pop();
        }
        cout<<"\n";
        for(int i=n-1;i>=0;i--)
        {
           if(st.empty())
             {st.push(i);
              right[i] = n-1;}
           else
             { while(heights[st.top()]>=heights[i])
                 { if(st.top()==n-1)
                    break;
                     st.pop();}
             if(heights[st.top()]<heights[i])
             right[i] = st.top()-1;
             else
             right[i] = n-1;
             st.push(i);}
        }
         int maxi=INT_MIN;
        for(int i=0;i<n;i++)
        {
            maxi=max(maxi,heights[i]*(right[i]-left[i]+1));
        }
        return maxi;
    }
};
